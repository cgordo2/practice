Grammar

    0 $accept: start $end

    1 start: start funcdef
    2      | %empty

    3 funcdef: DEF IDENT LPAREN parm_list RPAREN COLON stmt END
    4        | CR

    5 parm_list: expr COMMA parm_list
    6          | expr
    7          | %empty

    8 stmt: line stmt
    9     | selection stmt
   10     | CR stmt
   11     | %empty

   12 selection: IF expr COLON stmt END
   13          | IF expr COLON stmt ELSE COLON stmt END

   14 line: IDENT ASSIGN expr
   15     | IDENT LPAREN parm_list RPAREN
   16     | PRINT expr
   17     | RETURN expr

   18 expr: expr PLUS expr
   19     | expr MINUS expr
   20     | expr MULT expr
   21     | expr EXPON expr
   22     | expr DIV expr
   23     | expr MOD expr
   24     | expr LESS expr
   25     | expr LESSEQ expr
   26     | expr GREAT expr
   27     | expr GREATEQ expr
   28     | expr NOTEQ expr
   29     | expr EQ expr
   30     | MINUS expr
   31     | NUMBER
   32     | FLOAT
   33     | IDENT
   34     | LPAREN expr RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
CR (258) 4 10
ASSIGN (259) 14
PRINT (260) 16
IDENT (261) 3 14 15 33
NUMBER (262) 31
FLOAT (263) 32
LPAREN (264) 3 15 34
RPAREN (265) 3 15 34
DEF (266) 3
COLON (267) 3 12 13
COMMA (268) 5
IF (269) 12 13
END (270) 3 12 13
ELSE (271) 13
RETURN (272) 17
EXPON (273) 21
LESS (274) 24
LESSEQ (275) 25
GREAT (276) 26
GREATEQ (277) 27
EQ (278) 29
NOTEQ (279) 28
PLUS (280) 18
MINUS (281) 19 30
MULT (282) 20
DIV (283) 22
MOD (284) 23
NEG (285)
less_than_else (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
start (33)
    on left: 1 2, on right: 0 1
funcdef (34)
    on left: 3 4, on right: 1
parm_list (35)
    on left: 5 6 7, on right: 3 5 15
stmt (36)
    on left: 8 9 10 11, on right: 3 8 9 10 12 13
selection (37)
    on left: 12 13, on right: 9
line (38)
    on left: 14 15 16 17, on right: 8
expr (39)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34, on right:
    5 6 12 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 34


State 0

    0 $accept: . start $end

    $default  reduce using rule 2 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    1 start: start . funcdef

    $end  shift, and go to state 2
    CR    shift, and go to state 3
    DEF   shift, and go to state 4

    funcdef  go to state 5


State 2

    0 $accept: start $end .

    $default  accept


State 3

    4 funcdef: CR .

    $default  reduce using rule 4 (funcdef)


State 4

    3 funcdef: DEF . IDENT LPAREN parm_list RPAREN COLON stmt END

    IDENT  shift, and go to state 6


State 5

    1 start: start funcdef .

    $default  reduce using rule 1 (start)


State 6

    3 funcdef: DEF IDENT . LPAREN parm_list RPAREN COLON stmt END

    LPAREN  shift, and go to state 7


State 7

    3 funcdef: DEF IDENT LPAREN . parm_list RPAREN COLON stmt END

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    $default  reduce using rule 7 (parm_list)

    parm_list  go to state 13
    expr       go to state 14


State 8

   33 expr: IDENT .

    $default  reduce using rule 33 (expr)


State 9

   31 expr: NUMBER .

    $default  reduce using rule 31 (expr)


State 10

   32 expr: FLOAT .

    $default  reduce using rule 32 (expr)


State 11

   34 expr: LPAREN . expr RPAREN

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 15


State 12

   30 expr: MINUS . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 16


State 13

    3 funcdef: DEF IDENT LPAREN parm_list . RPAREN COLON stmt END

    RPAREN  shift, and go to state 17


State 14

    5 parm_list: expr . COMMA parm_list
    6          | expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    COMMA    shift, and go to state 18
    EXPON    shift, and go to state 19
    LESS     shift, and go to state 20
    LESSEQ   shift, and go to state 21
    GREAT    shift, and go to state 22
    GREATEQ  shift, and go to state 23
    EQ       shift, and go to state 24
    NOTEQ    shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MULT     shift, and go to state 28
    DIV      shift, and go to state 29
    MOD      shift, and go to state 30

    $default  reduce using rule 6 (parm_list)


State 15

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr
   34     | LPAREN expr . RPAREN

    RPAREN   shift, and go to state 31
    EXPON    shift, and go to state 19
    LESS     shift, and go to state 20
    LESSEQ   shift, and go to state 21
    GREAT    shift, and go to state 22
    GREATEQ  shift, and go to state 23
    EQ       shift, and go to state 24
    NOTEQ    shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MULT     shift, and go to state 28
    DIV      shift, and go to state 29
    MOD      shift, and go to state 30


State 16

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr
   30     | MINUS expr .

    EXPON  shift, and go to state 19

    $default  reduce using rule 30 (expr)


State 17

    3 funcdef: DEF IDENT LPAREN parm_list RPAREN . COLON stmt END

    COLON  shift, and go to state 32


State 18

    5 parm_list: expr COMMA . parm_list

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    $default  reduce using rule 7 (parm_list)

    parm_list  go to state 33
    expr       go to state 14


State 19

   21 expr: expr EXPON . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 34


State 20

   24 expr: expr LESS . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 35


State 21

   25 expr: expr LESSEQ . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 36


State 22

   26 expr: expr GREAT . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 37


State 23

   27 expr: expr GREATEQ . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 38


State 24

   29 expr: expr EQ . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 39


State 25

   28 expr: expr NOTEQ . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 40


State 26

   18 expr: expr PLUS . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 41


State 27

   19 expr: expr MINUS . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 42


State 28

   20 expr: expr MULT . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 43


State 29

   22 expr: expr DIV . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 44


State 30

   23 expr: expr MOD . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 45


State 31

   34 expr: LPAREN expr RPAREN .

    $default  reduce using rule 34 (expr)


State 32

    3 funcdef: DEF IDENT LPAREN parm_list RPAREN COLON . stmt END

    CR      shift, and go to state 46
    PRINT   shift, and go to state 47
    IDENT   shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50

    $default  reduce using rule 11 (stmt)

    stmt       go to state 51
    selection  go to state 52
    line       go to state 53


State 33

    5 parm_list: expr COMMA parm_list .

    $default  reduce using rule 5 (parm_list)


State 34

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   21     | expr EXPON expr .
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19

    $default  reduce using rule 21 (expr)


State 35

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   24     | expr LESS expr .
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 24 (expr)


State 36

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   25     | expr LESSEQ expr .
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 25 (expr)


State 37

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   26     | expr GREAT expr .
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 26 (expr)


State 38

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   27     | expr GREATEQ expr .
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 27 (expr)


State 39

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr
   29     | expr EQ expr .

    EXPON  shift, and go to state 19
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 29 (expr)


State 40

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   28     | expr NOTEQ expr .
   29     | expr . EQ expr

    EXPON  shift, and go to state 19
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 28 (expr)


State 41

   18 expr: expr . PLUS expr
   18     | expr PLUS expr .
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 18 (expr)


State 42

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   19     | expr MINUS expr .
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19
    MULT   shift, and go to state 28
    DIV    shift, and go to state 29
    MOD    shift, and go to state 30

    $default  reduce using rule 19 (expr)


State 43

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   20     | expr MULT expr .
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19

    $default  reduce using rule 20 (expr)


State 44

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   22     | expr DIV expr .
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19

    $default  reduce using rule 22 (expr)


State 45

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   23     | expr MOD expr .
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON  shift, and go to state 19

    $default  reduce using rule 23 (expr)


State 46

   10 stmt: CR . stmt

    CR      shift, and go to state 46
    PRINT   shift, and go to state 47
    IDENT   shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50

    $default  reduce using rule 11 (stmt)

    stmt       go to state 54
    selection  go to state 52
    line       go to state 53


State 47

   16 line: PRINT . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 55


State 48

   14 line: IDENT . ASSIGN expr
   15     | IDENT . LPAREN parm_list RPAREN

    ASSIGN  shift, and go to state 56
    LPAREN  shift, and go to state 57


State 49

   12 selection: IF . expr COLON stmt END
   13          | IF . expr COLON stmt ELSE COLON stmt END

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 58


State 50

   17 line: RETURN . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 59


State 51

    3 funcdef: DEF IDENT LPAREN parm_list RPAREN COLON stmt . END

    END  shift, and go to state 60


State 52

    9 stmt: selection . stmt

    CR      shift, and go to state 46
    PRINT   shift, and go to state 47
    IDENT   shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50

    $default  reduce using rule 11 (stmt)

    stmt       go to state 61
    selection  go to state 52
    line       go to state 53


State 53

    8 stmt: line . stmt

    CR      shift, and go to state 46
    PRINT   shift, and go to state 47
    IDENT   shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50

    $default  reduce using rule 11 (stmt)

    stmt       go to state 62
    selection  go to state 52
    line       go to state 53


State 54

   10 stmt: CR stmt .

    $default  reduce using rule 10 (stmt)


State 55

   16 line: PRINT expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON    shift, and go to state 19
    LESS     shift, and go to state 20
    LESSEQ   shift, and go to state 21
    GREAT    shift, and go to state 22
    GREATEQ  shift, and go to state 23
    EQ       shift, and go to state 24
    NOTEQ    shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MULT     shift, and go to state 28
    DIV      shift, and go to state 29
    MOD      shift, and go to state 30

    $default  reduce using rule 16 (line)


State 56

   14 line: IDENT ASSIGN . expr

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    expr  go to state 63


State 57

   15 line: IDENT LPAREN . parm_list RPAREN

    IDENT   shift, and go to state 8
    NUMBER  shift, and go to state 9
    FLOAT   shift, and go to state 10
    LPAREN  shift, and go to state 11
    MINUS   shift, and go to state 12

    $default  reduce using rule 7 (parm_list)

    parm_list  go to state 64
    expr       go to state 14


State 58

   12 selection: IF expr . COLON stmt END
   13          | IF expr . COLON stmt ELSE COLON stmt END
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    COLON    shift, and go to state 65
    EXPON    shift, and go to state 19
    LESS     shift, and go to state 20
    LESSEQ   shift, and go to state 21
    GREAT    shift, and go to state 22
    GREATEQ  shift, and go to state 23
    EQ       shift, and go to state 24
    NOTEQ    shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MULT     shift, and go to state 28
    DIV      shift, and go to state 29
    MOD      shift, and go to state 30


State 59

   17 line: RETURN expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON    shift, and go to state 19
    LESS     shift, and go to state 20
    LESSEQ   shift, and go to state 21
    GREAT    shift, and go to state 22
    GREATEQ  shift, and go to state 23
    EQ       shift, and go to state 24
    NOTEQ    shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MULT     shift, and go to state 28
    DIV      shift, and go to state 29
    MOD      shift, and go to state 30

    $default  reduce using rule 17 (line)


State 60

    3 funcdef: DEF IDENT LPAREN parm_list RPAREN COLON stmt END .

    $default  reduce using rule 3 (funcdef)


State 61

    9 stmt: selection stmt .

    $default  reduce using rule 9 (stmt)


State 62

    8 stmt: line stmt .

    $default  reduce using rule 8 (stmt)


State 63

   14 line: IDENT ASSIGN expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . EXPON expr
   22     | expr . DIV expr
   23     | expr . MOD expr
   24     | expr . LESS expr
   25     | expr . LESSEQ expr
   26     | expr . GREAT expr
   27     | expr . GREATEQ expr
   28     | expr . NOTEQ expr
   29     | expr . EQ expr

    EXPON    shift, and go to state 19
    LESS     shift, and go to state 20
    LESSEQ   shift, and go to state 21
    GREAT    shift, and go to state 22
    GREATEQ  shift, and go to state 23
    EQ       shift, and go to state 24
    NOTEQ    shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MULT     shift, and go to state 28
    DIV      shift, and go to state 29
    MOD      shift, and go to state 30

    $default  reduce using rule 14 (line)


State 64

   15 line: IDENT LPAREN parm_list . RPAREN

    RPAREN  shift, and go to state 66


State 65

   12 selection: IF expr COLON . stmt END
   13          | IF expr COLON . stmt ELSE COLON stmt END

    CR      shift, and go to state 46
    PRINT   shift, and go to state 47
    IDENT   shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50

    $default  reduce using rule 11 (stmt)

    stmt       go to state 67
    selection  go to state 52
    line       go to state 53


State 66

   15 line: IDENT LPAREN parm_list RPAREN .

    $default  reduce using rule 15 (line)


State 67

   12 selection: IF expr COLON stmt . END
   13          | IF expr COLON stmt . ELSE COLON stmt END

    END   shift, and go to state 68
    ELSE  shift, and go to state 69


State 68

   12 selection: IF expr COLON stmt END .

    $default  reduce using rule 12 (selection)


State 69

   13 selection: IF expr COLON stmt ELSE . COLON stmt END

    COLON  shift, and go to state 70


State 70

   13 selection: IF expr COLON stmt ELSE COLON . stmt END

    CR      shift, and go to state 46
    PRINT   shift, and go to state 47
    IDENT   shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50

    $default  reduce using rule 11 (stmt)

    stmt       go to state 71
    selection  go to state 52
    line       go to state 53


State 71

   13 selection: IF expr COLON stmt ELSE COLON stmt . END

    END  shift, and go to state 72


State 72

   13 selection: IF expr COLON stmt ELSE COLON stmt END .

    $default  reduce using rule 13 (selection)
