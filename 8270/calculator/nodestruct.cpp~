
void maketree(){
const int NUM= 0, OPERATOR = 1;

        struct ExpNode {  
                                    
            int kind;        
                             
            double number;   
            char op;         
            ExpNode *left;   
            ExpNode *right;  
           
            ExpNode( double val ) {
                  
               kind = NUM;
               number = val;
            }

            ExpNode( char op, ExpNode *left, ExpNode *right ) {
                  
               kind = OPERATOR;
               this->op = op;
               this->left = left;
               this->right = right;
            }

         }; 

          double getValue( ExpNode *node ) {
                
             if ( node->kind == NUM ) {
                   
                return node->number;
             }
             else {  

                double leftVal = getValue( node->left );
                double rightVal = getValue( node->right );
                switch ( node->op ) {
                   case '+':  return leftVal + rightVal;
                   case '-':  return leftVal - rightVal;
                   case '*':  return leftVal * rightVal;
                   case '/':  return leftVal / rightVal;
                }
             }
          } 
      }
